schema {
  query: Query
  mutation: Mutation
}

# The query type, represents all of the entry points into our object graph
type Query {
  ## Crawler
  listings(whitelistedOnly: Boolean, first: Int, after: String): [Listing!]!
  listing(addr: String!): Listing
  governanceEvents(addr: String, creationDate: DateRange, first: Int, after: String): [GovernanceEvent!]!
  governanceEventsTxHash(txHash: String!): [GovernanceEvent!]!
  articles(addr: String, first: Int, after: String): [ContentRevision!]!

  ## USD->CVL
  jsonb(id: String, hash: String): [Jsonb]!
}

input JsonbInput {
  id: String!
  jsonStr: String!
}

# The mutation type, represents all of the creation/update points into our object graph
type Mutation {

  ## USD->CVL
  createJsonb(input: JsonbInput!): Jsonb!
}

### Crawler related GraphQL schema

input DateRange {
  gt: Time
  lt: Time
}

# A type that reflects values in model.Listing
type Listing {
  name: String!
  contractAddress: String!
  whitelisted: Boolean!
  lastGovState: String!
  url: String!
  charterUri: String!
  ownerAddresses: [String!]!
  contributorAddresses: [String!]!
  createdDate: Time!
  applicationDate: Time
  approvalDate: Time
  lastUpdatedDate: Time!
}

# A type that reflects values in model.Metadata
type Metadata {
  key: String!
  value: String!
}

# A type that reflects block data in model.BlockData
type BlockData {
  blockNumber: Int!
  txHash:      String!
  txIndex:     Int!
  blockHash:   String!
  index:       Int!
}

# A type that reflects values in model.GovernanceEvent
type GovernanceEvent {
  listingAddress: String!
  senderAddress: String!
  metadata: [Metadata!]!
  governanceEventType: String!
  creationDate: Time!
  lastUpdatedDate: Time!
  eventHash: String!
  blockData: BlockData!
}

# A type that reflects values in model.ArticlePayload
type ArticlePayload {
  key: String
  value: ArticlePayloadValue!
}

# A type that reflects values in model.ContentRevision
type ContentRevision {
  listingAddress: String!
  payload: [ArticlePayload!]!
  payloadHash: String!
  editorAddress: String!
  contractContentId: Int!
  contractRevisionId: Int!
  revisionUri: String!
  revisionDate: Time!
}

scalar ArticlePayloadValue

### USD->CVL related GraphQL schema

type JsonField {
  key: String!
  value: JsonFieldValue!
}

type Jsonb {
  id: String!
  hash: String!
  createdDate: Time!
  rawJson: String!
  json: [JsonField!]!
}

scalar JsonFieldValue

### Common scalars
scalar Time
